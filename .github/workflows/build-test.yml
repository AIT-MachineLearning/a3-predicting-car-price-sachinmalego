name: Dash App CI

on:
  push:
    branches:
      - main


jobs:
  # Step 1: Test the app using Docker
  test:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Build the Docker image for testing
      - name: Build Docker image for testing
        run: docker build -t carpredictionasgthree -f .Dockerfile .

      # Run tests inside the Docker container
      - name: Run tests in Docker
        run: docker run carpredictionasgthree pytest

  build:
    runs-on: ubuntu-latest
    needs: test  # Build only after tests pass
    
    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3
      # Log in to DockerHub
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      # Build the Docker image for the app
      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/carpredictionasgthree:latest -f .Dockerfile .
      # Push the image to DockerHub
      - name: Push Docker image to DockerHub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/carpredictionasgthree:latest
        
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3
      
      # Install ssh-agent to manage the SSH key
      - name: Set up SSH agent
        uses: webfactory/ssh-agent@v0.8.1
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          ssh-passphrase: ${{ secrets.PASSPHRASE }}  # If the key is passphrase-protected

      # Execute the deployment commands over SSH
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ vars.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}  # Required for passphrase-protected key
          proxy_host: ${{ vars.PROXY_HOST }}
          proxy_username: ${{ secrets.USERNAME }}
          proxy_password: ${{ secrets.PROXY_PASSWORD }}
          proxy_port: 22
          script: |
            docker pull sachinmalego/carpredictionasgthree:latest
            docker compose -f st125171/docker-compose.yaml down --remove-orphans
            docker compose -f st125171/docker-compose.yaml up -d